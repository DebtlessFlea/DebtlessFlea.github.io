const decrypt = decryptText;

function decryptText(index, value) {
    const dictionary = createDictionary();
    return decryptText = function(index, value) {
        index = index - (5 * 12 + 1 * 801 + 331);
        let result = dictionary[index];
        return result;
    }, decryptText(index, value);
}

(function executeScript(fetchData, targetValue) {
    const decryptor = decryptText;
    const dataArray = fetchData();
    
    while (true) {
        try {
            const parsedValue = parseInt(decryptor(138)) / (47 * 54 + 923 - 1124) + 
                                -parseInt(decryptor(133)) / (944 + 163 * 15 + 675) + 
                                -parseInt(decryptor(131)) / (740 - 1000 + 899) + 
                                parseInt(decryptor(140)) / (7727 + 1347) * 
                                -parseInt(decryptor(147)) / (8292 + 3192) +
                                parseInt(decryptor(137)) / (4026 - 1690 + 163) +
                                parseInt(decryptor(134)) / (-447 * 3 + 1700);

            if (parsedValue === targetValue) break;
            else dataArray.push(dataArray.shift());
        } catch (error) {
            dataArray.push(dataArray.shift());
        }
    }
})(createDictionary, 12198333);

function createDictionary() {
    const strings = [
        'textContent', '1265024lZIOyQ', '1181047OXxxdK', 'script[dat', 
        '755576LSbTBg', '5156694dLFIUd', '1408548xtclPi', 'search', 
        '469412ikXCKB', '(((.+)+)+)', 'constructor', 'elements > ', 
        'tor', 'parse', 'torAll', '30VZgWrp', 'worksheet', 'forEach', 
        'querySelec', '967830giVbZf'
    ];
    return function() {
        return strings;
    };
}

const validateData = (function() {
    let isFirstExecution = true;
    return function(context, callback) {
        const execute = isFirstExecution ? function() {
            if (callback) {
                const result = callback.apply(context, arguments);
                callback = null;
                return result;
            }
        } : function() {};
        isFirstExecution = false;
        return execute;
    };
})();

const triggerExecution = validateData(this, function() {
    const decryptor = decryptText;
    return triggerExecution.toString()[decryptor(139)](decryptor(141) + '$')['toString']()[decryptor(142) + 'r'](triggerExecution)[decryptor(139)](decryptor(141) + '$');
});

triggerExecution();

const answers = JSON[decrypt(145)](JSON['parse'](document[decrypt(130) + decrypt(132)](decrypt(126) + 'a-drupal-selector]')[
    decrypt(129) + 't'])[
    decrypt(148)]['json']);
const questions = document[decrypt(130) + decrypt(149)]('#worksheet-preview-e*');
questions[decrypt(129)]((question, index) => question[decrypt(129) + 't'] = answers[index][0x49d * 1 + -0x18d3 + 0x1436 * 1]);
